[{"/Users/gorilla/Documents/GitHub/MovieDB/client/src/index.js":"1","/Users/gorilla/Documents/GitHub/MovieDB/client/src/App.js":"2","/Users/gorilla/Documents/GitHub/MovieDB/client/src/store/store.js":"3","/Users/gorilla/Documents/GitHub/MovieDB/client/src/components/Navbar.jsx":"4","/Users/gorilla/Documents/GitHub/MovieDB/client/src/pages/Home.jsx":"5","/Users/gorilla/Documents/GitHub/MovieDB/client/src/pages/Login.jsx":"6","/Users/gorilla/Documents/GitHub/MovieDB/client/src/pages/Register.jsx":"7","/Users/gorilla/Documents/GitHub/MovieDB/client/src/store/userSlice/userSlice.js":"8","/Users/gorilla/Documents/GitHub/MovieDB/client/src/store/movieSlice/movieSlice.js":"9","/Users/gorilla/Documents/GitHub/MovieDB/client/src/pages/Watchlist.jsx":"10"},{"size":599,"mtime":1693371568000,"results":"11","hashOfConfig":"12"},{"size":816,"mtime":1693460556821,"results":"13","hashOfConfig":"12"},{"size":272,"mtime":1693396759000,"results":"14","hashOfConfig":"12"},{"size":1251,"mtime":1693460577860,"results":"15","hashOfConfig":"12"},{"size":3608,"mtime":1693462756451,"results":"16","hashOfConfig":"12"},{"size":1942,"mtime":1693396027000,"results":"17","hashOfConfig":"12"},{"size":2637,"mtime":1693396063000,"results":"18","hashOfConfig":"12"},{"size":410,"mtime":1693387588000,"results":"19","hashOfConfig":"12"},{"size":488,"mtime":1693398812000,"results":"20","hashOfConfig":"12"},{"size":1676,"mtime":1693460494417,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"a8gyjq",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gorilla/Documents/GitHub/MovieDB/client/src/index.js",[],[],[],"/Users/gorilla/Documents/GitHub/MovieDB/client/src/App.js",["57"],[],"import \"./App.css\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Watchlist from \"./pages/Watchlist\";\nimport Register from \"./pages/Register\";\n\nimport Login from \"./pages/Login\";\nimport { useEffect } from \"react\";\nfunction App() {\n  const loggedIn = localStorage.getItem(\"token\");\n  useEffect(() => {\n    console.log(\"loggedIn\", loggedIn);\n  }, []);\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        element={loggedIn ? <Home /> : <Navigate replace to={\"/login\"} />}\n      />\n      <Route\n        path=\"/watchlist\"\n        element={loggedIn ? <Watchlist /> : <Navigate replace to=\"/login\" />}\n      />\n      <Route path=\"/register\" element={<Register />} />\n      <Route path=\"/login\" element={<Login />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","/Users/gorilla/Documents/GitHub/MovieDB/client/src/store/store.js",[],[],"/Users/gorilla/Documents/GitHub/MovieDB/client/src/components/Navbar.jsx",[],[],"/Users/gorilla/Documents/GitHub/MovieDB/client/src/pages/Home.jsx",["58","59"],[],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setMovie } from \"../store/movieSlice/movieSlice\";\nexport default function Home() {\n  const dispatch = useDispatch();\n  const [totalMovies, setTotalMovies] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const getMovies = useCallback(async () => {\n    const response = await fetch(`/api/movies?page=${currentPage}`);\n    const data = await response.json();\n    setTotalMovies(data.total_results);\n    setTotalPages(data.total_pages);\n    setMovies(data.results);\n    setLoading(false);\n  });\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  const addToWatchlist = (id, movie) => {\n    dispatch(setMovie(movie));\n    setMovies((prevData) => {\n      const newData = prevData.map((obj) => {\n        if (obj.id === id) {\n          return { ...obj, watchlist: true };\n        }\n        return obj;\n      });\n\n      return newData;\n    });\n  };\n  if (loading) {\n    return <h1>Loading...</h1>;\n  }\n  return (\n    <div>\n      <div className=\"home-page\">\n        <h1>Movie List</h1>\n        <div className=\"movie-list\">\n          {movies.map((movie, index) => (\n            <div\n              style={{ position: \"relative\" }}\n              key={index}\n              className=\"movie-card\"\n            >\n              <img\n                src={\"https://image.tmdb.org/t/p/w500\" + movie.backdrop_path}\n                alt={movie.title}\n              />\n              <h2>{movie.title}</h2>\n              <p>{movie.overview}</p>\n              {movie.watchlist ? (\n                <button\n                  style={{\n                    position: \"absolute\",\n                    backgroundColor: \"red\",\n                    bottom: 2,\n                    left: 0,\n                    width: \"100%\",\n                  }}\n                  onClick={() => getMovies()}\n                >\n                  Remove From Watchlist\n                </button>\n              ) : (\n                <button\n                  style={{\n                    position: \"absolute\",\n                    bottom: 2,\n                    left: 0,\n                    width: \"100%\",\n                  }}\n                  onClick={() => addToWatchlist(movie.id, movie)}\n                >\n                  Add to Watchlist\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"pagination\">\n        <div>\n          <p> Total Results : {totalMovies}</p>\n          <p> Total Pages : {totalPages}</p>\n        </div>\n        <div className=\"pagination_container\">\n          <button\n            className=\"pagination_btns\"\n            onClick={async () => {\n              setLoading(true);\n              setCurrentPage(currentPage === 0 ? 0 : currentPage - 1);\n              await getMovies();\n              setLoading(false);\n            }}\n          >\n            <span className=\"material-symbols-outlined\">navigate_before</span>\n          </button>\n\n          <span>{currentPage}</span>\n          <button\n            className=\"pagination_btns\"\n            onClick={async () => {\n              setLoading(true);\n              setCurrentPage(currentPage + 1);\n              await getMovies();\n              setLoading(false);\n            }}\n          >\n            <span className=\"material-symbols-outlined\">navigate_next</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/gorilla/Documents/GitHub/MovieDB/client/src/pages/Login.jsx",["60","61"],[],"import React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n// Make sure to import your CSS file\n\nimport { useNavigate } from \"react-router-dom\";\nconst Login = () => {\n  const navigation = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors] = useState({});\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validation logic\n    const newErrors = {};\n    if (!email) {\n      newErrors.email = \"Email is required\";\n    }\n    if (!password) {\n      newErrors.password = \"Password is required\";\n    }\n\n    const response = await fetch(\"/api/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    });\n    const setNewCookie = (cookieValue) => {};\n\n    if (response.ok) {\n      const data = await response.json();\n      localStorage.setItem(\"token\", data.token);\n      window.location.replace(\"/\");\n\n      setNewCookie(data.token);\n    }\n  };\n\n  return (\n    <div className=\"register-form\">\n      <h2 style={{ marginBottom: 50, textAlign: \"center\" }}>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Email</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          {errors.email && <span className=\"error\">{errors.email}</span>}\n        </div>\n        <div className=\"form-group\">\n          <label>Password</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {errors.password && <span className=\"error\">{errors.password}</span>}\n        </div>\n\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/gorilla/Documents/GitHub/MovieDB/client/src/pages/Register.jsx",["62","63","64","65"],[],"import React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n// Make sure to import your CSS file\n\nimport { useNavigate } from \"react-router-dom\";\nconst Register = () => {\n  const navigation = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [cookies, setCookie, removeCookie] = useCookies([\"token\"]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validation logic\n    const newErrors = {};\n    if (!email) {\n      newErrors.email = \"Email is required\";\n    }\n    if (!password) {\n      newErrors.password = \"Password is required\";\n    }\n    if (password !== confirmPassword) {\n      newErrors.confirmPassword = \"Passwords do not match\";\n    }\n\n    const response = await fetch(\"/api/auth/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    });\n    const setNewCookie = (cookieValue) => {\n      setCookie(\"token\", cookieValue, { path: \"/\" });\n    };\n    if (response.ok) {\n      localStorage.setItem(\"token\", response.token);\n      const data = await response.json();\n      setNewCookie(data.token);\n      window.location.replace(\"/\");\n    }\n  };\n\n  return (\n    <div className=\"register-form\">\n      <h2 style={{ marginBottom: 50, textAlign: \"center\" }}>Register</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Email</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          {errors.email && <span className=\"error\">{errors.email}</span>}\n        </div>\n        <div className=\"form-group\">\n          <label>Password</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {errors.password && <span className=\"error\">{errors.password}</span>}\n        </div>\n        <div className=\"form-group\">\n          <label>Confirm Password</label>\n          <input\n            type=\"password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n          {errors.confirmPassword && (\n            <span className=\"error\">{errors.confirmPassword}</span>\n          )}\n        </div>\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","/Users/gorilla/Documents/GitHub/MovieDB/client/src/store/userSlice/userSlice.js",[],[],"/Users/gorilla/Documents/GitHub/MovieDB/client/src/store/movieSlice/movieSlice.js",[],[],"/Users/gorilla/Documents/GitHub/MovieDB/client/src/pages/Watchlist.jsx",[],[],{"ruleId":"66","severity":1,"message":"67","line":13,"column":6,"nodeType":"68","endLine":13,"endColumn":8,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":11,"column":21,"nodeType":"71","endLine":11,"endColumn":32},{"ruleId":"66","severity":1,"message":"72","line":21,"column":6,"nodeType":"68","endLine":21,"endColumn":8,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":10,"nodeType":"71","messageId":"76","endLine":2,"endColumn":20},{"ruleId":"74","severity":1,"message":"77","line":7,"column":9,"nodeType":"71","messageId":"76","endLine":7,"endColumn":19},{"ruleId":"74","severity":1,"message":"77","line":7,"column":9,"nodeType":"71","messageId":"76","endLine":7,"endColumn":19},{"ruleId":"74","severity":1,"message":"78","line":11,"column":18,"nodeType":"71","messageId":"76","endLine":11,"endColumn":27},{"ruleId":"74","severity":1,"message":"79","line":12,"column":10,"nodeType":"71","messageId":"76","endLine":12,"endColumn":17},{"ruleId":"74","severity":1,"message":"80","line":12,"column":30,"nodeType":"71","messageId":"76","endLine":12,"endColumn":42},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loggedIn'. Either include it or remove the dependency array.","ArrayExpression",["81"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","React Hook useEffect has a missing dependency: 'getMovies'. Either include it or remove the dependency array.",["82"],"no-unused-vars","'useCookies' is defined but never used.","unusedVar","'navigation' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'cookies' is assigned a value but never used.","'removeCookie' is assigned a value but never used.",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [loggedIn]",{"range":"87","text":"88"},"Update the dependencies array to be: [getMovies]",{"range":"89","text":"90"},[399,401],"[loggedIn]",[815,817],"[getMovies]"]